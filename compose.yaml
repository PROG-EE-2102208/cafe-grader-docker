services:
  cafe-grader-web:
    build:
      dockerfile: Dockerfile.web
      context: .
    image: cafe-grader-web:latest
    container_name: cafe-grader-web
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=production
      - RAILS_TIME_ZONE=${RAILS_TIME_ZONE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - SQL_DATABASE_CONTAINER_HOST=${SQL_DATABASE_CONTAINER_HOST}
      - SQL_DATABASE_PORT=${SQL_DATABASE_PORT}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    volumes:
      - cafe-grader-storage:/cafe-grader/web/storage
      - cafe-grader-logs:/cafe-grader/web/log
    command: >
      bash -l -c "
        cd /cafe-grader/web &&
        rails db:create RAILS_ENV=production &&
        rails db:migrate RAILS_ENV=production &&
        rails db:seed RAILS_ENV=production &&
        rails assets:precompile RAILS_ENV=production &&
        rails server -b 0.0.0.0
      "
    depends_on:
      cafe-grader-db:
        condition: service_healthy

  cafe-grader-worker:
    build:
      dockerfile: Dockerfile.worker
      context: .
    image: cafe-grader-worker:latest
    container_name: cafe-grader-worker
    privileged: true  # Required for IOI Isolate
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - cafe-grader-judge:/cafe-grader/judge
      - cafe-grader-logs:/cafe-grader/web/log
    environment:
      - RAILS_ENV=production
      - PYTHON_PACKAGES=${PYTHON_PACKAGES:-numpy}
    command: >
      bash -l -c "
        echo 'Installing Python packages: ${PYTHON_PACKAGES}' &&
        source /venv/grader/bin/activate &&
        pip install --upgrade pip &&
        pip install ${PYTHON_PACKAGES} &&
        service cron start &&
        isolate-check-environment &&
        cd /cafe-grader/web &&
        RAILS_ENV=production bundle exec rails r 'Grader.restart(${GRADER_WORKER_THREADS})' &&
        whenever --update-crontab &&
        tail -f /dev/null
      "

  cafe-grader-db:
    image: mysql:latest
    container_name: cafe-grader-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 30s

volumes:
  db_data:
  cafe-grader-storage:      # Rails Active Storage (web service)
  cafe-grader-judge:        # Worker judge processing directories
  cafe-grader-logs:         # Shared logs between services