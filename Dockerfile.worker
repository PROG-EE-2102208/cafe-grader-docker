FROM ubuntu:noble

# Use bash as the default shell
SHELL ["/bin/bash", "-l", "-c"]

# Install systemd and required packages
RUN apt update && apt install -y \ 
    apache2 \
    apache2-dev \
    git \
    software-properties-common \
    libmysqlclient-dev \
    libcap-dev \
    apt-transport-https \
    postgresql \
    postgresql-server-dev-all \
    unzip

# Install programming language compilers and runtimes + monitoring tools
RUN apt install -y ghc g++ openjdk-21-jdk fpc php-cli php-readline golang-go cargo python3-venv

# install RVM
RUN apt-add-repository -y ppa:rael-gc/rvm && \
    apt update && \
    apt install -y rvm

# install IOI Isolate (using cg2 branch for proper cgroup v2 support)
RUN apt install -y libcap-dev libsystemd-dev
RUN git clone https://github.com/ioi/isolate.git /isolate
RUN cd isolate && make isolate && make install

# Copy cafe-grader-web and extract Ruby version
COPY cafe-grader-web /cafe-grader/web

# Install Ruby version from .ruby-version file and install gems
RUN RUBY_VERSION=$(cat /cafe-grader/web/.ruby-version | tr -d '[:space:]') && \
    echo "Installing Ruby ${RUBY_VERSION}..." && \
    /bin/bash -l -c "rvm install ${RUBY_VERSION}"
RUN /bin/bash -l -c "rvm use ${RUBY_VERSION}"

# bundle install
WORKDIR /cafe-grader/web
RUN bundle

# Copy configuration files from samples and process environment variables
RUN cp config/application.rb.SAMPLE config/application.rb
RUN cp config/database.yml.SAMPLE config/database.yml
RUN cp config/worker.yml.SAMPLE config/worker.yml

# Process application.rb to use environment variable for timezone
RUN sed -i 's/config\.time_zone = "Asia\/Bangkok"/config.time_zone = ENV.fetch("RAILS_TIME_ZONE", "Asia\/Bangkok")/' /cafe-grader/web/config/application.rb

# Process database.yml to use environment variables
RUN sed -i 's/username: grader/username: <%= ENV.fetch("MYSQL_USER", "grader_user") %>/' /cafe-grader/web/config/database.yml && \
    sed -i 's/password: grader/password: <%= ENV.fetch("MYSQL_PASSWORD", "grader_pass") %>/' /cafe-grader/web/config/database.yml && \
    sed -i 's/host: localhost/host: <%= ENV.fetch("SQL_DATABASE_CONTAINER_HOST", "cafe-grader-db") %>/' /cafe-grader/web/config/database.yml && \
    sed -i 's/socket: \/var\/run\/mysqld\/mysqld\.sock/port: <%= ENV.fetch("SQL_DATABASE_PORT", "3306") %>/' /cafe-grader/web/config/database.yml

# Process worker configuration file
RUN sed -i 's|web: http://localhost|web: http://cafe-grader-web:3000|' config/worker.yml

# Set up Python virtual environment for grader
RUN python3 -m venv /venv/grader

# add cron job to clean up isolate_submission directory
RUN apt install -y cron
RUN echo "0 2 * * * find /cafe-grader/judge/isolate_submission/ -maxdepth 1 -mtime +1 -exec rm -rf {} \\;" | crontab -

# copy isolate setup scripts
COPY scripts/set-ioi-isolate.sh /usr/local/bin/set-ioi-isolate

# Make scripts executable
RUN chmod +x /usr/local/bin/set-ioi-isolate

# Clean up apt cache and temporary files to reduce image size
RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*